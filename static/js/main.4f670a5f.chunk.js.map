{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","src","id","alt","firstName","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","handleSearch","e","setState","searchField","target","value","state","fetch","headers","then","response","json","data","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAeeA,EAZF,SAACC,GAAW,IACbC,EAAYD,EAAZC,QACR,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA8DC,IAAI,YAE1E,mCAAMJ,EAAQK,aACd,4BAAIL,EAAQM,YCKTC,G,MAXE,SAACR,GAAW,IACjBS,EAAaT,EAAbS,SACR,OACI,qBAAKP,UAAU,YAAf,SACKO,EAASC,KAAI,SAACT,GAAD,OACV,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,WCFpBO,G,MAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACd,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4CjEG,E,kDA1CX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAkBViB,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,YAAaF,EAAEG,OAAOC,SAnB1B,EAAKC,MAAQ,CACTd,SAAU,GAEVW,YAAa,IALF,E,qDASnB,WAAqB,IAAD,OAChBI,MAAM,6CAA8C,CAChDC,QAAS,CACL,SAAU,8BAGbC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OAAc,EAAKR,SAAS,CAAEV,SAAUkB,EAASE,Y,oBAS/D,WAAU,IAAD,EAC6BC,KAAKP,MAA/Bd,EADH,EACGA,SAAUW,EADb,EACaA,YAEZW,EAAmBtB,EAASuB,QAAO,SAAC/B,GAAD,OACrCA,EAAQK,UAAU2B,cAAcC,SAASd,EAAYe,wBAGzD,OACI,sBAAKjC,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,aAAciB,KAAKb,eAC3D,cAAC,EAAD,CAAUR,SAAUsB,W,GArClBK,IAAMC,WCOTC,G,MAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCDpBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.4f670a5f.chunk.js","sourcesContent":["import './card.styles.css';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst Card = (props) => {\r\n    const { monster } = props;\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n            {/* <img src={monster.picture} alt=\"\" /> */}\r\n            <h2> {monster.firstName}</h2>\r\n            <p>{monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst CardList = (props) => {\r\n    const { monsters } = props;\r\n    return (\r\n        <div className=\"card-list\">\r\n            {monsters.map((monster) => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} />\r\n);\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\nimport './App.css';\nimport CardList from './component/card-list/card-list.component';\nimport SearchBox from './component/search-box/search-box.component';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            // eslint-disable-next-line react/no-unused-state\n            searchField: '',\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://dummyapi.io/data/api/user?limit=12', {\n            headers: {\n                'app-id': '6082c92d268349e4557468f1',\n            },\n        })\n            .then((response) => response.json())\n            .then((response) => this.setState({ monsters: response.data }));\n    }\n\n    handleSearch = (e) => {\n        this.setState({\n            searchField: e.target.value,\n        });\n    };\n\n    render() {\n        const { monsters, searchField } = this.state;\n\n        const filteredMonsters = monsters.filter((monster) =>\n            monster.firstName.toLowerCase().includes(searchField.toLocaleLowerCase())\n        );\n\n        return (\n            <div className=\"App\">\n                <h1>Monster Rolodex</h1>\n                <SearchBox placeholder=\"Search monster\" handleChange={this.handleSearch} />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}